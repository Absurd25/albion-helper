import os

def collect_python_files(root_dir):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö .py-—Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
    python_files = []
    for dirpath, _, filenames in os.walk(root_dir):
        for filename in filenames:
            if filename.endswith(".py"):
                full_path = os.path.join(dirpath, filename)
                if not(full_path in ('D:\\X3\\Python\\Project\\albion\\help bot\\albion_helper\\all_file_to_txt\\mainn.py','D:\\X3\\Python\\Project\\albion\\help bot\\albion_helper\\config\\read_json.py')):
                    python_files.append(full_path)
    return python_files

def generate_output_file(output_path, root_dir):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç txt-—Ñ–∞–π–ª —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –≤—Å–µ—Ö .py-—Ñ–∞–π–ª–æ–≤."""
    try:
        with open(output_path, "w", encoding="utf-8") as output_file:
            files = collect_python_files(root_dir)

            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ .py —Ñ–∞–π–ª–æ–≤: {len(files)}")
            for file_path in files:
                relative_path = os.path.relpath(file_path, root_dir)
                print(f"üìÑ –ó–∞–ø–∏—Å—ã–≤–∞—é: {relative_path}")

                output_file.write(f"--- {relative_path} ---\n\n")

                with open(file_path, "r", encoding="utf-8") as py_file:
                    content = py_file.read()
                    output_file.write(content + "\n\n")
        print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {output_path}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: {e}")


project_root = os.path.abspath("../")
output_txt = os.path.abspath("all_python_files.txt")

print(f"üîç –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç –≤: {project_root}")
generate_output_file(output_txt, project_root)