import os
import cv2
from modules.image_comparer import find_image_difference
from utils.logger import setup_logger

logger = setup_logger()

def process_food_difference(before_image_path, after_image_path, output_dir=None):
    """
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–¥–æ –∏ –ø–æ—Å–ª–µ –µ–¥—ã), –Ω–∞—Ö–æ–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è,
    —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç food_diff –∏ –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.
    :param before_image_path: str ‚Äî –ø—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –¥–æ –µ–¥—ã
    :param after_image_path: str ‚Äî –ø—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É –ø–æ—Å–ª–µ –µ–¥—ã
    :param output_dir: str ‚Äî –ø–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    :return: list[str] ‚Äî —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    """
    if output_dir is None:
        output_dir = os.path.join("data", "templates", "temp", "diff")

    os.makedirs(output_dir, exist_ok=True)

    # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    for f in os.listdir(output_dir):
        os.remove(os.path.join(output_dir, f))

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    img_before = cv2.imread(before_image_path)
    img_after = cv2.imread(after_image_path)

    if img_before is None or img_after is None:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –æ–±–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        return []

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∞–∑–ª–∏—á–∏–π
    bounding_boxes, result_img = find_image_difference(img_before, img_after)

    if not bounding_boxes:
        logger.info("üîç –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return []

    # 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–∞–∑–Ω–∏—Ü–µ–π (food_diff)
    food_diff_path = os.path.join(output_dir, "food_diff.png")
    cv2.imwrite(food_diff_path, result_img)
    logger.info(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {food_diff_path}")

    # 2. –û–±—Ä–µ–∑–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∂–¥—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å
    saved_paths = []
    for idx, (x, y, w, h) in enumerate(bounding_boxes):
        cropped = img_after[y:y + h, x:x + w]
        cropped_path = os.path.join(output_dir, f"change_{idx}.png")
        cv2.imwrite(cropped_path, cropped)
        logger.info(f"‚úÖ –û–±–ª–∞—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è [{idx}] —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {cropped_path}")
        saved_paths.append(cropped_path)

    return saved_paths