import cv2



def find_image_difference(img1, img2):
    """
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞–º–∏.
    """
    if img1.shape != img2.shape:
        print("‚ö†Ô∏è –†–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
        return [], None

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –æ—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ
    gray1 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    gray2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)

    # –ù–∞–π–¥—ë–º —Ä–∞–∑–Ω–∏—Ü—É
    diff = cv2.absdiff(gray1, gray2)
    _, thresh = cv2.threshold(diff, 30, 255, cv2.THRESH_BINARY)
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    result_img = img1.copy()
    bounding_boxes = []

    for contour in contours:
        if cv2.contourArea(contour) > 100:  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –º–µ–ª–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            x, y, w, h = cv2.boundingRect(contour)
            cv2.rectangle(result_img, (x, y), (x + w, y + h), (0, 255, 0), 2)
            bounding_boxes.append((x, y, w, h))

    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(bounding_boxes)} –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    return bounding_boxes, result_img